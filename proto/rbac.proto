syntax = "proto3";

package rbacProto;
option go_package = "../rbac_pb;rbac_pb";
import "base.proto";
import "admin.entity.proto";
import "role.entity.proto";
import "path.entity.proto";
import "permission.entity.proto";
import "domain.entity.proto";
service Rbac {
  rpc MDomainList(DomainListReq)returns(DefaultRes);
  rpc MDomainCreate(DomainCreateReq)returns(DefaultRes);
  rpc MDomainUpdate(DomainUpdateReq)returns(DefaultRes);
  rpc MDomainDel(DefaultPkReq)returns(DefaultRes);
  rpc MDomainInfo(DefaultPkReq)returns(DefaultRes);


  rpc MAdminList(AdminListReq)returns(DefaultRes);
  rpc MAdminInfo(DefaultPkReq)returns(DefaultRes);
  rpc MAdminCreate(AdminCreateReq)returns(DefaultRes);
  rpc MAdminUpdate(AdminUpdateReq)returns(DefaultRes);
  rpc MAdminDel(DefaultPkReq)returns(DefaultRes);

  rpc MAdminRoleList(AdminRoleListReq)returns(DefaultRes);
  rpc MAdminRoleSet(AdminRoleSetReq)returns(DefaultRes);
  rpc MAdminPermission(DefaultPkReq)returns(DefaultRes);


  rpc MRoleList(RoleListReq)returns(DefaultRes);
  rpc MRoleInfo(DefaultPkReq)returns(DefaultRes);
  rpc MRoleCreate(RoleCreateReq)returns(DefaultRes);
  rpc MRoleUpdate(RoleUpdateReq)returns(DefaultRes);
  rpc MRoleDel(DefaultPkReq)returns(DefaultRes);
  rpc MRolePermissionList(RolePermissionListReq)returns(DefaultRes);
  rpc MRolePermissionSet(RolePermissionSetReq)returns(DefaultRes);
  //return []


  rpc MPermissionList(PermissionListReq)returns(DefaultRes);
  rpc MPermissionInfo(DefaultPkReq)returns(DefaultRes);
  rpc MPermissionCreate(PermissionCreateReq)returns(DefaultRes);
  rpc MPermissionUpdate(PermissionUpdateReq)returns(DefaultRes);
  rpc MPermissionDel(DefaultPkReq)returns(DefaultRes);

  rpc MPermissionPathList(PermissionPathListReq)returns(DefaultRes);
  rpc MPermissionPathSet(PermissionPathSetReq)returns(DefaultRes);

  rpc MPathList(PathListReq)returns(DefaultRes);
  rpc MPathInfo(DefaultPkReq)returns(DefaultRes);
  rpc MPathCreate(PathCreateReq)returns(DefaultRes);
  rpc MPathUpdate(PathUpdateReq)returns(DefaultRes);
  rpc MPathDel(DefaultPkReq)returns(DefaultRes);


  rpc AdminMenuTree(AdminMenuTreeReq)returns(DefaultRes);
  rpc AdminInfo(DefaultPkReq)returns(LoginRes);
  rpc AccountEdit(AccountEditReq)returns(DefaultRes);
  rpc AccountInfo(DefaultPkReq)returns(DefaultRes);
  rpc Login(LoginReq)returns(LoginRes);
  rpc Registry(RegistryReq)returns(DefaultRes);
  rpc RolePermission(RolePermissionReq)returns(DefaultRes); 

  rpc GetDomainPolicy(GetDomainPolicyReq)returns(DefaultRes);


}




