// Code generated by protoc-gen-go. DO NOT EDIT.
// source: base.proto

package pb

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

//import "google/protobuf/any.proto";
type DefaultRes struct {
	// @inject_tag: json:"code"
	Code int32 `protobuf:"varint,1,opt,name=code,proto3" json:"code"`
	// @inject_tag: json:"msg"
	Msg string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg"`
	// @inject_tag: json:"data"
	Data                 string   `protobuf:"bytes,3,opt,name=Data,proto3" json:"data"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DefaultRes) Reset()         { *m = DefaultRes{} }
func (m *DefaultRes) String() string { return proto.CompactTextString(m) }
func (*DefaultRes) ProtoMessage()    {}
func (*DefaultRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_db1b6b0986796150, []int{0}
}

func (m *DefaultRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DefaultRes.Unmarshal(m, b)
}
func (m *DefaultRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DefaultRes.Marshal(b, m, deterministic)
}
func (m *DefaultRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DefaultRes.Merge(m, src)
}
func (m *DefaultRes) XXX_Size() int {
	return xxx_messageInfo_DefaultRes.Size(m)
}
func (m *DefaultRes) XXX_DiscardUnknown() {
	xxx_messageInfo_DefaultRes.DiscardUnknown(m)
}

var xxx_messageInfo_DefaultRes proto.InternalMessageInfo

func (m *DefaultRes) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *DefaultRes) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

func (m *DefaultRes) GetData() string {
	if m != nil {
		return m.Data
	}
	return ""
}

type EmptyReq struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EmptyReq) Reset()         { *m = EmptyReq{} }
func (m *EmptyReq) String() string { return proto.CompactTextString(m) }
func (*EmptyReq) ProtoMessage()    {}
func (*EmptyReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_db1b6b0986796150, []int{1}
}

func (m *EmptyReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EmptyReq.Unmarshal(m, b)
}
func (m *EmptyReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EmptyReq.Marshal(b, m, deterministic)
}
func (m *EmptyReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EmptyReq.Merge(m, src)
}
func (m *EmptyReq) XXX_Size() int {
	return xxx_messageInfo_EmptyReq.Size(m)
}
func (m *EmptyReq) XXX_DiscardUnknown() {
	xxx_messageInfo_EmptyReq.DiscardUnknown(m)
}

var xxx_messageInfo_EmptyReq proto.InternalMessageInfo

// 主键请求
type DefaultPkReq struct {
	// Types that are valid to be assigned to Pk:
	//	*DefaultPkReq_ID
	//	*DefaultPkReq_Code
	Pk isDefaultPkReq_Pk `protobuf_oneof:"pk"`
	// @gotags: json:"domain_id" binding:"required"
	DomainID             int64    `protobuf:"varint,3,opt,name=DomainID,proto3" json:"domain_id" binding:"required"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DefaultPkReq) Reset()         { *m = DefaultPkReq{} }
func (m *DefaultPkReq) String() string { return proto.CompactTextString(m) }
func (*DefaultPkReq) ProtoMessage()    {}
func (*DefaultPkReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_db1b6b0986796150, []int{2}
}

func (m *DefaultPkReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DefaultPkReq.Unmarshal(m, b)
}
func (m *DefaultPkReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DefaultPkReq.Marshal(b, m, deterministic)
}
func (m *DefaultPkReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DefaultPkReq.Merge(m, src)
}
func (m *DefaultPkReq) XXX_Size() int {
	return xxx_messageInfo_DefaultPkReq.Size(m)
}
func (m *DefaultPkReq) XXX_DiscardUnknown() {
	xxx_messageInfo_DefaultPkReq.DiscardUnknown(m)
}

var xxx_messageInfo_DefaultPkReq proto.InternalMessageInfo

type isDefaultPkReq_Pk interface {
	isDefaultPkReq_Pk()
}

type DefaultPkReq_ID struct {
	ID int64 `protobuf:"varint,1,opt,name=ID,proto3,oneof"`
}

type DefaultPkReq_Code struct {
	Code string `protobuf:"bytes,2,opt,name=Code,proto3,oneof"`
}

func (*DefaultPkReq_ID) isDefaultPkReq_Pk() {}

func (*DefaultPkReq_Code) isDefaultPkReq_Pk() {}

func (m *DefaultPkReq) GetPk() isDefaultPkReq_Pk {
	if m != nil {
		return m.Pk
	}
	return nil
}

func (m *DefaultPkReq) GetID() int64 {
	if x, ok := m.GetPk().(*DefaultPkReq_ID); ok {
		return x.ID
	}
	return 0
}

func (m *DefaultPkReq) GetCode() string {
	if x, ok := m.GetPk().(*DefaultPkReq_Code); ok {
		return x.Code
	}
	return ""
}

func (m *DefaultPkReq) GetDomainID() int64 {
	if m != nil {
		return m.DomainID
	}
	return 0
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*DefaultPkReq) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*DefaultPkReq_ID)(nil),
		(*DefaultPkReq_Code)(nil),
	}
}

func init() {
	proto.RegisterType((*DefaultRes)(nil), "proto.DefaultRes")
	proto.RegisterType((*EmptyReq)(nil), "proto.EmptyReq")
	proto.RegisterType((*DefaultPkReq)(nil), "proto.DefaultPkReq")
}

func init() { proto.RegisterFile("base.proto", fileDescriptor_db1b6b0986796150) }

var fileDescriptor_db1b6b0986796150 = []byte{
	// 188 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x3c, 0x8f, 0x31, 0xcf, 0x82, 0x30,
	0x10, 0x86, 0xa1, 0x85, 0x2f, 0x7c, 0x17, 0x07, 0xd2, 0x38, 0x10, 0x27, 0xc2, 0xc4, 0x84, 0x83,
	0xa3, 0x1b, 0x56, 0x03, 0x9b, 0xb9, 0xc9, 0xb8, 0xb5, 0x5a, 0x8d, 0x41, 0x6c, 0x91, 0x3a, 0xf8,
	0xef, 0x0d, 0x17, 0xe3, 0x74, 0xcf, 0x7b, 0xb9, 0x3c, 0x97, 0x17, 0x40, 0xab, 0xd1, 0x54, 0xee,
	0x69, 0xbd, 0x15, 0x31, 0x8d, 0x62, 0x07, 0x20, 0xcd, 0x45, 0xbd, 0xee, 0x1e, 0xcd, 0x28, 0x04,
	0x44, 0x27, 0x7b, 0x36, 0x59, 0x98, 0x87, 0x65, 0x8c, 0xc4, 0x22, 0x05, 0xde, 0x8f, 0xd7, 0x8c,
	0xe5, 0x61, 0xf9, 0x8f, 0x13, 0x4e, 0x57, 0x52, 0x79, 0x95, 0x71, 0x5a, 0x11, 0x17, 0x00, 0xc9,
	0xb6, 0x77, 0xfe, 0x8d, 0x66, 0x28, 0x0e, 0x30, 0xfb, 0x3a, 0xf7, 0x1d, 0x9a, 0x41, 0xa4, 0xc0,
	0x5a, 0x49, 0x4e, 0xde, 0x04, 0xc8, 0x5a, 0x29, 0xe6, 0x10, 0x6d, 0xa6, 0x3f, 0x24, 0x6d, 0x02,
	0xa4, 0x24, 0x16, 0x90, 0x48, 0xdb, 0xab, 0xdb, 0xa3, 0x95, 0xe4, 0xe6, 0xf8, 0xcb, 0x75, 0x04,
	0xcc, 0x75, 0x35, 0x1c, 0x93, 0xaa, 0x5a, 0x3a, 0xbd, 0x76, 0x5a, 0xff, 0x51, 0x81, 0xd5, 0x27,
	0x00, 0x00, 0xff, 0xff, 0x7b, 0x50, 0x39, 0x66, 0xd5, 0x00, 0x00, 0x00,
}
